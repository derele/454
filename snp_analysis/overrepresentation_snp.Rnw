<<overrep, echo=FALSE, results=hide, cache=TRUE>>=

## subsets for contig.df and GO-annotation containing only dn.ds contigs
dn.ds.df <- subset(contig.df, contig.df$AcMN & !is.na(dn.ds))
GO.dn.ds <- subset(GO.annot, pept_id%in%dn.ds.df$contig)

## the category of >.5 dn/ds contigs
big05 <- dn.ds.df[dn.ds.df$dn.ds>0.5 &
                  dn.ds.df$contig%in%GO.dn.ds$pept_id, "contig"]


a.mapping <- GO.dn.ds[,c("pept_id", "go_term")]

## produce a AnnotationDbi object 
goframeD <- as.data.frame(cbind(frame.go_id=as.character(a.mapping$go_term),
                                frame.Evidence="IEA",
                                frame.gene_id=as.character(a.mapping$pept_id)))
goF <- GOFrame(goframeD, organism="Anguillicola crassus")

## produce an full GO-mapping
goAllF <- GOAllFrame(goF)
all.a.mapping <- as.data.frame(cbind(pept_id=goAllF@data$gene_id,
                                       go_term=goAllF@data$go_id))


GO2c <- by(all.a.mapping, all.a.mapping$pept_id,
                function (x) c(as.character(x$go_term)))
geneN <- names(GO2c)

TOGO.all.onto <- function (o, gl, gN) {
  g <- factor(as.integer(gN %in% gl))
  names(g) <- gN
  toGO <-  new("topGOdata", ontology = o, allGenes = g, annot = annFUN.gene2GO,
               gene2GO = GO2c)
  resultFis <- runTest(toGO, algorithm = "classic", statistic = "fisher")
  list(toGO, resultFis) ## returns a list first data then result
}

ont <- c("MF", "BP", "CC")

dn.ds.over <-   lapply(ont, function (on) TOGO.all.onto (on, big05, geneN))

GO.over.dn.ds <-   do.call("rbind", lapply(1:3, function (i) {
  GenTable(dn.ds.over[[i]][[1]], p.value = dn.ds.over[[i]][[2]], 
  orderBy = "classic", topNodes = 100, numChar=100)}))

GO.over.dn.ds <- subset(GO.over.dn.ds, p.value<0.05)

GO.table.uninf <- function (GO.over.obj){
  uninformative <- sapply(GO.over.obj$GO.ID, function (term) {
    sig <- GO.over.obj[GO.over.obj$GO.ID%in%term, "Significant"]
    ancestors <- GO.over.obj[GO.over.obj$GO.ID%in%get.GO(term, "ANCESTOR"), "GO.ID" ]
    ancestors <- unlist(ancestors[!ancestors%in%term])
    GO.over.obj[GO.over.obj$GO.ID%in%ancestors & GO.over.obj$Significant==sig, "GO.ID"]
  })
  unique(unlist(uninformative))
}

GO.over.dn.ds <- GO.over.dn.ds[!GO.over.dn.ds$GO.ID%in%GO.table.uninf(GO.over.dn.ds), ]

GO.over.dn.ds.lines <- table(sapply(GO.over.dn.ds$GO.ID, function (x) Ontology(x)))

dn.ds.df$sigP <- as.factor(dn.ds.df$sigP)
## this for the easy nn-data
u.test <- wilcox.test(dn.ds ~ sigP, data=dn.ds.df, conf.int = TRUE)


## sort the conservation according to breath 
contig.df$novel.50 <- factor(contig.df$novel.50,
                             levels=c("conserved", "novel.in.metazoa",
                               "novel.in.nematoda", "novel.in.clade3",
                               "novel.in.Ac"))

contig.df$novel.80 <- factor(contig.df$novel.80,
                             levels=c("conserved", "novel.in.metazoa",
                               "novel.in.nematoda", "novel.in.clade3",
                               "novel.in.Ac"))

@   

<<nn.dn.ds, echo=FALSE, results=hide>>=

sigP.box <- ggplot(dn.ds.df, aes(dn.ds.df$sigP, dn.ds.df$dn.ds)) + 
  geom_boxplot() + 
  scale_y_log10("dn/ds") +
  scale_x_discrete("", 
                   breaks=levels(dn.ds.df$sigP),
                   labels=c("No signal peptide",
                     "Signal peptide")) +
  opts(title = "SignalP  prediction",
       axis.title.x = theme_text(size = 15), 
       axis.text.x = theme_text(size = 15)) +
  theme_bw()

ggsave("../figures/sigp_dn_ds.pdf", sigP.box)
@ 

<<novel.dn.ds, echo=FALSE, results=hide>>=

setwd("/home/ele/thesis/454/figures/")
for(o in 1:3){
  printGraph(dn.ds.over[[o]][[1]],
             dn.ds.over[[o]][[2]], firstSigNodes = 10,
             fn.prefix = paste("tGO", "DN_DS", ont[o], sep="_"),
             useInfo = "all", pdfSW = TRUE)
}
setwd("/home/ele/thesis/454/paper/")

  
novel.dn.ds.50 <- ggplot(subset(contig.df, contig.df$Ac & !is.na(novel.50) & !is.na(dn.ds)),
                         aes(novel.50, dn.ds)) +
  geom_boxplot() +
  scale_y_log10("dn/ds") +
  scale_x_discrete("") +
  opts(title="evolutionary conservation at bitsore threshold of 50") +
  theme_bw()

novel.dn.ds.80 <- ggplot(subset(contig.df, contig.df$Ac & !is.na(novel.80) & !is.na(dn.ds)),
                                aes(novel.80, dn.ds)) +
  geom_boxplot() +
  scale_y_log10("dn/ds") +
  scale_x_discrete("") +
  opts(title="evolutionary conservation at bitsore threshold of 80") +
  theme_bw()

# Set up the page

pdf("../figures/Figure_5.pdf", width=14, height=6)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
vplayout <- function(x, y)
    viewport(layout.pos.row = x, layout.pos.col = y)

# Make each plot, in the correct location
print(novel.dn.ds.50, vp = vplayout(1, 1 ))
print(novel.dn.ds.80, vp = vplayout(1, 2 ))

grid.text("a", x=unit(0.01,"npc"), y=unit(0.99,"npc")) 
grid.text("b", x=unit(0.51,"npc"), y=unit(0.99,"npc")) 

dev.off() 

@ 

<<novel.dn.ds.test, echo=FALSE, results=hide, cache=TRUE>>=

### Nemenyi-Damico-Wolfe-Dunn test (joint ranking)
  ### Hollander & Wolfe (1999), page 244
  ### (where Steel-Dwass results are given)
get.ndwd <- function(data.df, test.var, fac.var) {
  NDWD <- oneway_test(test.var ~ fac.var, data = data.df,
                      ytrafo = function(data) trafo(data, numeric_trafo = rank),
                      xtrafo = function(data) trafo(data, factor_trafo = function(x)
                        model.matrix(~x - 1) %*% t(contrMat(table(x), "Tukey"))),
                      teststat = "max", distribution = approximate(B = 90000))
  return(NDWD)
}

dn.ds.df$novel.50 <- as.factor(dn.ds.df$novel.50)
dn.ds.df$novel.80 <- as.factor(dn.ds.df$novel.80)

novel.50.ndwd <- get.ndwd(dn.ds.df, dn.ds.df$dn.ds, dn.ds.df$novel.50)
novel.50.kw.ph <- pvalue(novel.50.ndwd, method = "single-step")

novel.80.ndwd <- get.ndwd(dn.ds.df, dn.ds.df$dn.ds, dn.ds.df$novel.80)
novel.80.kw.ph <- pvalue(novel.80.ndwd, method = "single-step")

@ 

<<novel.nn, echo=FALSE, results=hide>>=

sigP.50 <- as.data.frame.matrix(table(contig.df[contig.df$Ac, "novel.50"],
                                      grepl("Yes*", contig.df[contig.df$Ac, "sigP"])))
names(sigP.50) <- c("No.Sigp", "Sigp")
sigP.50 <- transform(sigP.50, proportion=(Sigp/(Sigp+No.Sigp))*100)

sigP.80 <- as.data.frame.matrix(table(contig.df[contig.df$Ac, "novel.80"],
                                      grepl("Yes*", contig.df[contig.df$Ac, "sigP"])))
names(sigP.80) <- c("No.Sigp", "Sigp")
sigP.80 <- transform(sigP.80, proportion=(Sigp/(Sigp+No.Sigp))*100)

sigP.con.test.50 <- fisher.test(contig.df[contig.df$Ac, "novel.50"]%in%
                                c("novel.in.Ac", "novel.in.nematoda"),
                                grepl("Yes*", contig.df[contig.df$Ac, "sigP"]))
sigP.con.test.80 <- fisher.test(contig.df[contig.df$Ac, "novel.80"]%in%
                                c("novel.in.Ac", "novel.in.nematoda"),
                                grepl("Yes*", contig.df[contig.df$Ac, "sigP"]))


sigP.50.p <- ggplot(subset(contig.df, contig.df$Ac & !is.na(novel.50) & !is.na(sigP)),
              aes(novel.50, fill=sigP)) +
       geom_bar(position="fill") + coord_polar(theta="y") +
  scale_y_continuous("") +
  scale_x_discrete("") +
  opts(title="proportion of TUGs in SignalP category\nby evolutionary conservation categories at bitsore threshold of 50", plot.background = theme_blank()) +
  theme_bw()

sigP.80.p <- ggplot(subset(contig.df, contig.df$Ac & !is.na(novel.80) & !is.na(sigP)),
              aes(novel.80, fill=sigP)) +
  geom_bar(position="fill") + coord_polar(theta="y") +
  scale_y_continuous("") +
  scale_x_discrete("") +
  opts(title="proportion of TUGs in SignalP category\nby evolutionary conservation categories at bitsore threshold of 80", plot.background = theme_blank()) + 
  theme_bw()

sigP.50.p.MN <- ggplot(subset(contig.df, contig.df$AcMN & !is.na(novel.50) & !is.na(sigP)),
              aes(novel.50, fill=sigP)) +
       geom_bar(position="fill") + coord_polar(theta="y") +
  scale_y_continuous("") +
  scale_x_discrete("") +
  opts(title="proportion of highCA contigs in SignalP category\nby evolutionary conservation categories at bitsore threshold of 50", plot.background = theme_blank()) +
  theme_bw()

sigP.80.p.MN <- ggplot(subset(contig.df, contig.df$AcMN & !is.na(novel.80) & !is.na(sigP)),
              aes(novel.80, fill=sigP)) +
  geom_bar(position="fill") + coord_polar(theta="y") +
  scale_y_continuous("") +
  scale_x_discrete("") +
  opts(title="proportion of highCA contigs in SignalP category\nby evolutionary conservation categories at bitsore threshold of 80", plot.background = theme_blank()) + 
  theme_bw()

pdf("../figures/Figure_6.pdf", width=15, height=15)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))

vp1 <- viewport(width = 0.54, height = 0.54, x = 0.25, y = 0.24)
vp2 <- viewport(width = 0.54, height = 0.54, x = 0.25, y = 0.72)
vp3 <- viewport(width = 0.54, height = 0.54, x = 0.74, y = 0.24)
vp4 <- viewport(width = 0.54, height = 0.54, x = 0.74, y = 0.72) 

print(sigP.50.p, vp = vp1)
print(sigP.80.p, vp = vp2)
print(sigP.50.p.MN, vp = vp3)
print(sigP.80.p.MN, vp = vp4)

grid.text("a", x=unit(0.01,"npc"), y=unit(0.99,"npc")) 
grid.text("b", x=unit(0.51,"npc"), y=unit(0.99,"npc")) 
grid.text("c", x=unit(0.01,"npc"), y=unit(0.52,"npc")) 
grid.text("d", x=unit(0.51,"npc"), y=unit(0.52,"npc")) 

dev.off() 

### tests for lethal Ce rnai
rnai.contigs <- table(contig.df[contig.df$Ac, "Ce.rnai"])

u.rnai <- wilcox.test(dn.ds ~ Ce.rnai, data=dn.ds.df, conf.int = TRUE)

f.rnai <- chisq.test(contig.df[contig.df$Ac, "novel.50"]%in%"conserved",
                     contig.df[contig.df$Ac, "Ce.rnai"])

f.rnai.80 <- chisq.test(contig.df[contig.df$Ac, "novel.80"]%in%"conserved",
                     contig.df[contig.df$Ac, "Ce.rnai"])

con.rnai <- as.data.frame.matrix(table(contig.df[contig.df$Ac, "novel.50"]%in%"conserved",
                                       contig.df[contig.df$Ac, "Ce.rnai"]))
names(con.rnai) <- c("non.lethal","lethal")
con.rnai <- round(transform(con.rnai, proportion=lethal/(non.lethal+lethal)*100),2)
rownames(con.rnai) <- c("other", "conserved")

@ 
