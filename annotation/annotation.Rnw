%%% annotation.Rnw --- 

%% Author: emanuelheitlinger@gmail.com
<<annotation, echo=FALSE, cache=TRUE, results=hide>>=
GO.annot <- read.delim("/home/ele/Data/454/annotation/annot8r/output_Ac/GO.csv", sep=",", header=FALSE)
names(GO.annot) <- c("pept_id", "go_term", "pcf", "descr", "slim", "besthit", "bestscore", "bestev", "hitnum", "maxhits", "fraction") 

## reset the shorted names used in annotation to the proper contig-names
GO.annot$pept_id <- gsub("Ac_", "Acrassus_", GO.annot$pept_id)

GO.annot$go_term <- as.character(gsub(" ", "", GO.annot$go_term))
GO.annot$pcf <- gsub(" C", "CC", GO.annot$pcf)
GO.annot$pcf <- gsub(" F", "MF", GO.annot$pcf)
GO.annot$pcf <- gsub(" P", "BP", GO.annot$pcf)

EC.annot <- read.delim("/home/ele/Data/454/annotation/annot8r/output_Ac/EC.csv", sep=",", header=FALSE)
names(EC.annot) <- c("pept_id", "ec_id", "descr", "besthit", "bestscore", "bestev", "hitnum", "maxhits", "fraction") 
EC.annot$pept_id <- gsub("Ac_", "Acrassus_", EC.annot$pept_id)

KEGG.annot <- read.delim("/home/ele/Data/454/annotation/annot8r/output_Ac/KEGG.csv", sep=",", header=FALSE)
names(KEGG.annot) <- c("pept_id", "ko_id", "path", "descr", "besthit", "bestscore", "bestev", "hitnum", "maxhits", "fraction") 
KEGG.annot$pept_id <- gsub("Ac_", "Acrassus_", KEGG.annot$pept_id)

IPR.annot <- read.delim("/home/ele/Data/454/annotation/iprscan/MN.pep.fasta.iprscan", header=FALSE)
names(IPR.annot)[1] <- "pept_id"

## annotation with Bm orthologous sequence
all.bm.hit <- as.character(contig.df[contig.df$Ac, "Bm.hit"])
all.bm.hit <- all.bm.hit[!is.na(all.bm.hit)]
all.bm.hit <- gsub("UniRef100_", "", all.bm.hit)

uniProt <- useMart("unimart", dataset="uniprot")
all.bm.names <- getBM(attributes =c("name", "protein_name"),
                          filter="accession",values=all.bm.hit, mart=uniProt)

all.bm.names$name <- gsub("_BRUMA", "", all.bm.names$name)
all.bm.names$Bm.hit <- paste("UniRef100_", all.bm.names$name, sep="")
names(all.bm.names)[names(all.bm.names)=="protein_name"] <- "Bm.annot"
contig.df <- merge(all.bm.names[, 2:3], contig.df, by="Bm.hit", all.y=TRUE, sort=FALSE)

## anntoation with Ce orthologous sequence
all.ce.hit <- as.character(contig.df[contig.df$Ac, "Ce.hit"])
all.ce.hit <- all.ce.hit[!is.na(all.ce.hit)]

WORMB <- useMart("WS220" , dataset="wormbase_gene")
all.ce.rnai <- getBM(attributes = c("transcript", "brief_ident",
                        "rnai_phenotype_phenotype_label"),
                          filter="transcript",values=all.ce.hit, mart=WORMB)

rnai <- as.data.frame(c(by(all.ce.rnai, all.ce.rnai$transcript,
                           function (x) any(grepl("lethal", x$rnai_phenotype_phenotype_label)))))
names(rnai) <- "Ce.rnai"

ce.names <- all.ce.rnai[, c("transcript","brief_ident")]
names(ce.names) <- c("Ce.hit", "Ce.annot")
ce.names <- ce.names[!duplicated(ce.names$Ce.hit), ]
ce.names <- merge(ce.names, rnai, by.x="Ce.hit", by.y="row.names", all.x=TRUE)

## there would be other ids in this:
##ce.add.names <- names(read.sequences("/drobo/db/blastdb/wormpep220/wormpep220_named.fasta"))

contig.df <- merge(contig.df, ce.names, by="Ce.hit", all.x=TRUE, sort=FALSE)


## anntoation with nempep descriptions
nempep.nuc <- read.sequences("/drobo/db/blastdb/nembase4/nembase4_nuc.fasta")
nempep <- data.frame(Cluster.ID=substring(names(nempep.nuc), 1, 8))
nempep$nempep.annot <- gsub("\\w{3}\\d{5}_1 Cluster: ", "",  names(nempep.nuc))
nempep <- nempep[!duplicated(nempep$Cluster.ID),]

BL.nempep <- read.blast.best("/home/ele/Data/454/post_assembly_screening/fullest_vs_nembase_pro.blt")
BL.nempep$Pept.ID <- substring(BL.nempep$V2, 1, 8)
## notice difference between cluster identifiers and peptide identifiers
BL.nempep$Cluster.ID <- gsub("(\\w)(\\w)P", "\\1\\2C", BL.nempep$Pept.ID)
names(BL.nempep)[names(BL.nempep)=="V12"] <- "nempep.bit"
names(BL.nempep)[names(BL.nempep)=="V1"] <- "contig"

nemp <- merge(BL.nempep[, c(1, 12, 14)], nempep, by="Cluster.ID")
names(nemp)[names(nemp)=="Cluster.ID"] <- "nempep.hit"
contig.df <- merge(contig.df, nemp, by="contig", all.x=TRUE)

n.nempep <- length(contig.df[contig.df$Ac &
                             !grepl("no annotation", contig.df$nempep.annot) &
                             !is.na(contig.df$nempep.annot), "nempep.annot"])

## annotagion with uniprot-name of nr-orthologous sequence
gis.nr <- unique(as.character(nr$gi.nr.blast))

## write(gis.nr, "/home/ele/Data/454/annotation/all_gis.acc")
gi2uniprot <- read.delim("/home/ele/Data/454/annotation/gi2uniprot.tab")
names(gi2uniprot) <- c("gi", "uniprot")
gi2uniprot$accession <- gsub("_.*", "", gi2uniprot$uniprot)

gi.uni <- getBM(attributes = c("accession", "protein_name"),
                filter="accession",values=gi2uniprot$accession, mart=uniProt)

gi.uni.acc <- merge(gi2uniprot, gi.uni)

nr <- merge(nr, gi.uni.acc[,c(2, 4)], by.x="gi.nr.blast", by.y="gi", all.x=TRUE)
nr <- nr[!duplicated(nr$V1),]

names(nr)[names(nr)%in%c("V1")] <- "contig"
names(nr)[names(nr)%in%c("V12")] <-  "nr.bit"
names(nr)[names(nr)%in%c("protein_name")] <- "nr.uniprot.annot"

contig.df <- merge(contig.df,
                   nr[, c("gi.nr.blast", "contig", "nr.bit", "nr.uniprot.annot")],
                   all.x=TRUE)

n.uniprot <- length(contig.df[contig.df$Ac & !is.na(contig.df$nr.uniprot.annot), "nr.uniprot.annot"])

@ 

<<ann.venn, echo=FALSE, results=hide>>=
GOannotations <- unique(GO.annot$pept_id[GO.annot$pept_id%in%contig.df[contig.df$Ac,"contig"]])
nGO <- length(GOannotations)

ECannotations <- unique(EC.annot$pept_id[EC.annot$pept_id%in%contig.df[contig.df$Ac,"contig"]])
nEC <- length(ECannotations)

KEGGannotations <- unique(KEGG.annot$pept_id[KEGG.annot$pept_id%in%contig.df[contig.df$Ac,"contig"]])
nKEGG <- length(KEGGannotations)


Allannotations <- unique(c(GOannotations, ECannotations, KEGGannotations))
nallannotations <- length(Allannotations)

annotationVenn <- venn.diagram(list(GO   = match(GOannotations, Allannotations),
                                       EC   = match(ECannotations, Allannotations),
                                       KEGG = match(KEGGannotations, Allannotations)),
                               reverse=TRUE,
                               rotation=3,
                               filename = NULL)

GOannotations.MN <- unique(GO.annot$pept_id[GO.annot$pept_id%in%contig.df[contig.df$AcMN,"contig"]])
nGO.MN <- length(GOannotations.MN)

ECannotations.MN <- unique(EC.annot$pept_id[EC.annot$pept_id%in%contig.df[contig.df$AcMN,"contig"]])
nEC.MN <- length(ECannotations.MN)

KEGGannotations.MN <- unique(KEGG.annot$pept_id[KEGG.annot$pept_id%in%contig.df[contig.df$AcMN,"contig"]])
nKEGG.MN <- length(KEGGannotations.MN)

IPRannotations <- unique(as.character(IPR.annot[!IPR.annot$V4%in%"Seg",
                                                "pept_id"]))
nIPR <- length(IPRannotations)

##################
## compare GO anntotation through annot8r to annotations through
IPR.GO.list <- by(IPR.annot, IPR.annot$pept_id, function (x){
  f <- gsub(".*(GO:\\d{7}).*", "\\1", unique(x$V14))
  as.list(f[nchar(f)>0])
})

IPR.GO.list <- IPR.GO.list[lapply(IPR.GO.list, length)>0]

IPR.GO.df <- data.frame(contig = rep(names(IPR.GO.list), sapply(IPR.GO.list, length)),
                        GO = unlist(IPR.GO.list))

## only the most detailled level of annotation
IPR.GO.list.det <- by(IPR.GO.df, IPR.GO.df$contig, function (x) x$GO)

## making the full "all annotation" 
IPR.goframeData <- as.data.frame(cbind(frame.go_id=as.character(IPR.GO.df$GO),
                                       frame.Evidence="IEA",
                                       frame.gene_id=as.character(IPR.GO.df$contig)))

IPR.goFrame <- GOFrame(IPR.goframeData, organism="Angillicola crassus")

## produce a full GO-mapping
IPR.goAllFrame <- GOAllFrame(IPR.goFrame)
IPR.all.GO <- as.data.frame(cbind(gene_id=IPR.goAllFrame@data$gene_id,
                                         go=IPR.goAllFrame@data$go_id))

IPR.all.GO.list <- by(IPR.all.GO, IPR.all.GO$gene_id, function(x) x$go)
IPR.all.GO.list <- lapply(IPR.all.GO.list, function(x) x[!x%in%c("GO:0003674",
                                                                 "GO:0008150",
                                                                 "GO:0005575")])

## GO anntoation from Similarity
a <- GO.annot[GO.annot$pept_id%in%contig.df[contig.df$category%in%"MN", "contig"],
              c("pept_id", "go_term")]

## A version of the GO list containing only the hightes detail annotation
GO.list.det <- by(a, a$pept_id, function(x) x$go_term)

## produce a AnnotationDbi object 
gfD <- as.data.frame(cbind(frame.go_id=as.character(a$go_term),
                           frame.Evidence="IEA",
                           frame.gene_id=as.character(a$pept_id)))
goF <- GOFrame(gfD, organism="Anguillicola crassus")

## produce an full GO-mapping
goAllF <- GOAllFrame(goF)
all.GO <- as.data.frame(cbind(pept_id=goAllF@data$gene_id,
                              go_term=goAllF@data$go_id))

all.GO.list <- by(all.GO, all.GO$pept_id, function(x) x$go_term)
## remove the roots
all.GO.list <- lapply(all.GO.list, function(x) x[!x%in%c("GO:0003674",
                                                         "GO:0008150",
                                                         "GO:0005575")])
## Compare 
S.in.D <- lapply(names(all.GO.list), function(x)
                 any(all.GO.list[[x]]%in%IPR.all.GO.list[[x]]))
names(S.in.D) <- names(all.GO.list)
S.in.D <- melt(S.in.D)
S.in.D <- rename(S.in.D, c(value="S.in.D"))

D.in.S <- lapply(names(IPR.all.GO.list), function(x)
                 any(IPR.all.GO.list[[x]]%in%all.GO.list[[x]]))
names(D.in.S) <- names(IPR.all.GO.list)
D.in.S <- melt(D.in.S)
D.in.S <- rename(D.in.S, c(value="D.in.S"))

both.have <- intersect(names(D.in.S), names(S.in.D))

S.in.Ddet <- lapply(names(all.GO.list), function(x)
                    any(all.GO.list[[x]]%in%IPR.GO.list.det[[x]]))
names(S.in.Ddet) <- names(all.GO.list)
S.in.Ddet <- melt(S.in.Ddet)
S.in.Ddet <- rename(S.in.Ddet, c(value="S.in.Ddet"))

D.in.Sdet <- lapply(names(IPR.all.GO.list), function(x)
                    any(IPR.all.GO.list[[x]]%in%GO.list.det[[x]]))
names(D.in.Sdet) <- names(IPR.all.GO.list)
D.in.Sdet <- melt(D.in.Sdet)
D.in.Sdet <- rename(D.in.Sdet, c(value="D.in.Sdet"))

GO.scrut <- merge(S.in.D, D.in.S, by="L1", all=TRUE)

GO.scrut <- merge(GO.scrut, S.in.Ddet, by="L1", all=TRUE)
GO.scrut <- merge(GO.scrut, D.in.Sdet, by="L1", all=TRUE)

GO.scrut$S.in.D[is.na(GO.scrut$S.in.D)] <- "missing"
GO.scrut$D.in.S[is.na(GO.scrut$D.in.S)] <- "missing"
GO.scrut$S.in.Ddet[is.na(GO.scrut$S.in.Ddet)] <- "missing"
GO.scrut$D.in.Sdet[is.na(GO.scrut$D.in.Sdet)] <- "missing"

GO.scrut$match <- as.factor(GO.scrut$S.in.Ddet):
  as.factor(GO.scrut$D.in.Sdet)

## drop unused levels
GO.scrut$match <- factor(GO.scrut$match, levels=unique(as.character(GO.scrut$match)))

GO.scrut$match <- gsub("TRUE:TRUE", "complete\nagreement", GO.scrut$match)
GO.scrut$match <- gsub("FALSE:TRUE", "domain annotation\nmore detailed", GO.scrut$match)
GO.scrut$match <- gsub("TRUE:FALSE", "similarity annotation\nmore detailed", GO.scrut$match)

GO.scrut$match <- gsub("FALSE:missing", "similarity\nassignment only", GO.scrut$match)
GO.scrut$match <- gsub("missing:FALSE", "domain\nassignment only", GO.scrut$match)

GO.scrut$match <- gsub("FALSE:FALSE", "disagreement below root", GO.scrut$match)

GO.scrut[GO.scrut$match%in%"disagreement below root",]$match <-
  ifelse(GO.scrut[GO.scrut$match%in%"disagreement below root", "S.in.D"],
         "lower level\ndisagreement", "first level\ndisagreement")


## pdf("../Supporting_information/GO_pie.pdf")
## pie(table(GO.scrut$match), col=rainbow(nlevels(as.factor(GO.scrut$match))),
##     clockwise = TRUE)
## dev.off()

#######################
Allannotations.MN <- unique(c(GOannotations.MN, ECannotations.MN, KEGGannotations.MN, IPRannotations))

annotationVennMN <- venn.diagram(list(GO   = match(GOannotations.MN, Allannotations.MN),
                                      EC   = match(ECannotations.MN, Allannotations.MN),
                                      KEGG = match(KEGGannotations.MN, Allannotations.MN),
                                      IPR = match(IPRannotations, Allannotations.MN)),
                                 filename = NULL)

not.annot <- nrow(contig.df[contig.df$Ac & !contig.df$contig%in%Allannotations,])
not.annot.MN <- nrow(contig.df[contig.df$AcMN & !contig.df$contig%in%Allannotations.MN,])

pdf("/home/ele/thesis/454/figures/Figure_1.pdf", width=5, height=10)
vp1 <- viewport(x=0.01, y=0.51, w=0.98, h=0.48,
                just=c("left", "bottom"))
vp2 <- viewport(x=0.01, y=0.01, w=0.98, h=0.48,
                just=c("left", "bottom"))
push.viewport(vp1)
grid.roundrect()
grid.text("a",x=unit(0,"npc"),y=unit(0.97,"npc"), gp=gpar(fontsize=18))
grid.text(not.annot, x=unit(0.07,"npc"), y=unit(0.1,"npc"), gp=gpar(fontfamily="serif"))
grid.draw(annotationVenn)
pop.viewport()
push.viewport(vp2)
grid.roundrect()
grid.text("b",x=unit(0,"npc"),y=unit(0.97,"npc"), gp=gpar(fontsize=18))
grid.text(not.annot.MN, x=unit(0.07,"npc"), y=unit(0.1,"npc"), gp=gpar(fontfamily="serif"))
grid.draw(annotationVennMN)
pop.viewport()
dev.off()            

all.identifier <- length(contig.df[contig.df$Ac & contig.df$contig%in%GOannotations &
                                   contig.df$contig%in%ECannotations &
                                   contig.df$contig%in%KEGGannotations, "contig"
                                   ])

any.blast.annot <- nrow(contig.df[contig.df$Ac &
                                  (!is.na(contig.df$Bm.hit) |
                                   !is.na(contig.df$Ce.hit) |
                                   !is.na(contig.df$nempep.hit) |
                                   !is.na(contig.df$nr.bit)), ])

perc.any.annot <- (any.blast.annot/nrow(contig.df[contig.df$Ac,]))*100

any.blast.annot.MN <- nrow(contig.df[contig.df$AcMN &
                                  (!is.na(contig.df$Bm.hit) |
                                   !is.na(contig.df$Ce.hit) |
                                   !is.na(contig.df$nempep.hit) |
                                   !is.na(contig.df$nr.bit)), ])

perc.any.annot.MN <- (any.blast.annot.MN/nrow(contig.df[contig.df$AcMN,]))*100



@ 
